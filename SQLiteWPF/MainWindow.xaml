<Window x:Class="SQLiteWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:m="clr-namespace:Microsoft.Maps.MapControl.WPF;assembly=Microsoft.Maps.MapControl.WPF"
        xmlns:wv2="clr-namespace:Microsoft.Web.WebView2.Wpf;assembly=Microsoft.Web.WebView2.Wpf"
        xmlns:ScottPlot="clr-namespace:ScottPlot.WPF;assembly=ScottPlot.WPF"
        xmlns:local="clr-namespace:SQLiteWPF"
        mc:Ignorable="d"
          ResizeMode="CanResizeWithGrip"
        
        WindowStartupLocation="CenterScreen"
        WindowState="Maximized"
        Title="Hermès - Aménagements et Travaux - Gestionnaire de Projet" Height="1000" Width="1920">



    <Window.Resources>

        <Style TargetType="{x:Type DatePicker}">
            <Style.Resources>
                <Style TargetType="DatePickerTextBox">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="White"/>
                </Style>

            </Style.Resources>
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
            <Style.Triggers>
                <!-- your triggers here -->
            </Style.Triggers>
        </Style>

        <Style x:Key="CustomDatePickerTextBoxStyle" TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="Background" Value="DarkGray" />
            <Setter Property="Foreground" Value="White" />
            <!-- Autres propriétés de style que vous souhaitez personnaliser -->
        </Style>

        <Style x:Key="HeaderButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderBrush" Value="Black"></Setter>
            <Setter Property="BorderThickness" Value="1"/>

            <Setter Property="MinWidth" Value="50"/>
            <Setter Property="MinHeight" Value="40"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="0,0,3,0"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Black" CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="LightBlue"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=Item.project_seen_for_session}" Value="1">
                                <Setter Property="Background" Value="#518651"/>
                                <Setter Property="Foreground" Value="White"/>

                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=Item.project_seen_for_session}" Value="0">
                                <Setter Property="Background" Value="#73a6b8"/>
                                <Setter Property="Foreground" Value="White"/>
                            </DataTrigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="DarkGray"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="LightGray"/>
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>


        </Style>

        <Style x:Key="NonVu_RowHeader" TargetType="{x:Type DataGridRowHeader}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="MinHeight" Value="40" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="BackgroundBorder" BorderThickness="0,1,0,1" Background="{StaticResource Brush_DataGridHeaderBackground}" BorderBrush="{StaticResource Brush_DataGridHeaderSortedBorder}" Grid.ColumnSpan="2" />
                            <ContentPresenter Margin="6,3,6,3" VerticalAlignment="Center" />
                            <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill" Grid.Column="1" Width="8" Height="6" Fill="White" Margin="0,0,8,0" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.4" />
                            <Rectangle Width="1" Fill="Black" HorizontalAlignment="Right" Grid.ColumnSpan="2" />
                            <Rectangle Width="1" Margin="0,0,1,0" Fill="SteelBlue" HorizontalAlignment="Right" Grid.ColumnSpan="2" />
                            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource Style_HeaderGripper}"/>
                            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource Style_HeaderGripper}"/>
                        </Grid>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource Brush_DataGridHeaderMouseOverBackground}" />
                                <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{StaticResource Brush_DataGridHeaderBorder}" />
                            </Trigger>


                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- HEADER DE ROW VU ! -->
        <!-- HEADER DE ROW VU ! -->

        <Style x:Key="Vu_RowHeader" TargetType="{x:Type DataGridRowHeader}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="MinHeight" Value="40" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="BackgroundBorder" BorderThickness="0,1,0,1" Background="#71bb71" BorderBrush="{StaticResource Brush_DataGridHeaderSortedBorder}" Grid.ColumnSpan="2" />
                            <ContentPresenter Margin="6,3,6,3" VerticalAlignment="Center" />
                            <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill" Grid.Column="1" Width="8" Height="6" Fill="White" Margin="0,0,8,0" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.4" />
                            <Rectangle Width="1" Fill="Black" HorizontalAlignment="Right" Grid.ColumnSpan="2" />
                            <Rectangle Width="1" Margin="0,0,1,0" Fill="SteelBlue" HorizontalAlignment="Right" Grid.ColumnSpan="2" />
                            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource Style_HeaderGripper}"/>
                            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource Style_HeaderGripper}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarLineButton"
       TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels"
          Value="True" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="Focusable"
          Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="Border"
                Margin="1"
                CornerRadius="2"
                BorderThickness="1">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderMediumColor}"
                                Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                                Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource ControlLightColor}"/>
                                            <GradientStop Color="{DynamicResource ControlMediumColor}"
                                Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="DeepSkyBlue" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                Storyboard.TargetProperty="(Shape.Fill).
                    (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="Green" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Path x:Name="Arrow"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="{Binding Content, 
            RelativeSource={RelativeSource TemplatedParent}}" >
                                <Path.Fill>
                                    <SolidColorBrush Color="{DynamicResource GlyphColor}"/>
                                </Path.Fill>
                            </Path>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButton"
       TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels"
          Value="True" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="IsTabStop"
          Value="false" />
            <Setter Property="Focusable"
          Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb"
       TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels"
          Value="True" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="IsTabStop"
          Value="false" />
            <Setter Property="Focusable"
          Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar"
                 TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18" />
                    <RowDefinition Height="0.00001*" />
                    <RowDefinition MaxHeight="18" />
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3"
            CornerRadius="5"
            Background="Black" />
                <RepeatButton Grid.Row="0"
                  Style="{StaticResource ScrollBarLineButton}"
                  Height="18"
                  Command="ScrollBar.LineUpCommand"
                  Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track x:Name="PART_Track"
           Grid.Row="1"
           IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}"
               Margin="1,0,1,0">
                            <Thumb.BorderBrush>

                                <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="1,0">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="Black"
                                Offset="0.0" />
                                            <GradientStop Color="DarkGray"
                                Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Thumb.BorderBrush>
                            <Thumb.Background>

                                <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="1,0">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="Black"
                                Offset="0.0" />
                                            <GradientStop Color="DarkGray"
                                Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Thumb.Background>
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="2"
                  Style="{StaticResource ScrollBarLineButton}"
                  Height="18"
                  Command="ScrollBar.LineDownCommand"
                  Content="M 0 0 L 4 4 L 8 0 Z" />
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="HorizontalScrollBar"
                 TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18" />
                    <ColumnDefinition Width="0.00001*" />
                    <ColumnDefinition MaxWidth="18" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3"
            CornerRadius="5"
            Background="Black" />
                <RepeatButton Grid.Column="0"
                  Style="{StaticResource ScrollBarLineButton}"
                  Width="18"
                  Command="ScrollBar.LineLeftCommand"
                  Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track x:Name="PART_Track"
           Grid.Column="1"
           IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}"
               Margin="0,1,0,1">

                            <Thumb.BorderBrush>

                                <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="1,0">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="Yellow"
                                Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                                Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Thumb.BorderBrush>
                            <Thumb.Background>

                                <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="Black"
                                Offset="0.0" />
                                            <GradientStop Color="SkyBlue"
                                Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Thumb.Background>
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="2"
                  Style="{StaticResource ScrollBarLineButton}"
                  Width="18"
                  Command="ScrollBar.LineRightCommand"
                  Content="M 0 0 L 4 4 L 0 8 Z" />
            </Grid>
        </ControlTemplate>

        <Style x:Key="{x:Type ScrollBar}"
       TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels"
          Value="True" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation"
             Value="Horizontal">
                    <Setter Property="Width"
              Value="Auto" />
                    <Setter Property="Height"
              Value="18" />
                    <Setter Property="Template"
              Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation"
             Value="Vertical">
                    <Setter Property="Width"
              Value="18" />
                    <Setter Property="Height"
              Value="Auto" />
                    <Setter Property="Template"
              Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>





        <Style TargetType="DataGrid" x:Key="DarkDataGridStyle">
            <Setter Property="Background" Value="#FF2D2D30"/>
            <Setter Property="Foreground" Value="#FFFFFFFF"/>
            <Setter Property="BorderBrush" Value="#FF3F3F46"/>
            <Setter Property="RowBackground" Value="#FF2D2D30"/>
            <Setter Property="AlternatingRowBackground" Value="#FF27272A"/>
            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="#FF3F3F46"/>
                        <Setter Property="Foreground" Value="#FFFFFFFF"/>
                        <Setter Property="BorderBrush" Value="#FF515151"/>
                        <Setter Property="BorderThickness" Value="0,0,0,1"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Background" Value="#FF2D2D30"/>
                        <Setter Property="Foreground" Value="#FFFFFFFF"/>
                        <Setter Property="BorderBrush" Value="#FF3F3F46"/>
                        <Setter Property="BorderThickness" Value="0,0,0,1"/>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="RowHeaderStyle">
                <Setter.Value>
                    <Style TargetType="DataGridRowHeader">
                        <Setter Property="Background" Value="#FF2D2D30"/>
                        <Setter Property="Foreground" Value="#FFFFFFFF"/>
                        <Setter Property="BorderBrush" Value="#FF3F3F46"/>
                        <Setter Property="BorderThickness" Value="0,0,1,0"/>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Dark TabControl Style -->
        <Style TargetType="{x:Type TabControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" Background="#1a1a1a" />
                            <Border x:Name="ContentPanel" Grid.Row="1" Grid.Column="0" BorderBrush="#444" BorderThickness="1" CornerRadius="2" Background="#222" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2">
                                <ContentPresenter x:Name="PART_SelectedContentHost" Margin="4" ContentSource="SelectedContent" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Dark TabItem Style -->
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="#444" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" CornerRadius="5,5,0,0" Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="#555"/>
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="Gray" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="SkyBlue"></Setter>
                                <Setter Property="Background" Value="Black"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MonStyleDeBorder2" TargetType="Border">
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Background" Value="#2d2d2d"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="2" Direction="200"/>
                </Setter.Value>
            </Setter>
            <!-- Ajoutez un effet de survol pour changer la couleur de BorderBrush -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="White"/>
                    <Setter Property="Background" Value="#6a7a93"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Style de Border de présentation, avec effet de changement de couleur de la bordure au survol du curseur -->

        <Style x:Key="MonStyleDeBorder" TargetType="Border">
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Background" Value="#FF2F2F2F"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="2" Direction="200"/>
                </Setter.Value>
            </Setter>
            <!-- Ajoutez un effet de survol pour changer la couleur de BorderBrush -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Fill Brushes -->

        <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#2d2d2d" Offset="0.0"/>
                    <GradientStop Color="#2d2d2d" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="White" Offset="0.0"/>
                    <GradientStop Color="White" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />

        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#2d2d2d" />

        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />

        <!-- Border Brushes -->

        <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="Black" Offset="0.0"/>
                    <GradientStop Color="Black" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#CCC" Offset="0.0"/>
                    <GradientStop Color="#444" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#777" Offset="0.0"/>
                    <GradientStop Color="#000" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#444" Offset="0.0"/>
                    <GradientStop Color="#888" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

        <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />

        <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />

        <!-- Miscellaneous Brushes -->
        <SolidColorBrush x:Key="GlyphBrush" Color="Gray" />

        <SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />

        </ControlTemplate>

        <!-- Bouton de déroulement de la ComboBox -->

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="30" />
                </Grid.ColumnDefinitions>
                <Border
                      x:Name="Border" 
                      Grid.ColumnSpan="2"
                      CornerRadius="5"
                      Background="{StaticResource NormalBrush}"
                      BorderBrush="{StaticResource NormalBorderBrush}"
                      BorderThickness="1" />
                <Border 
                      Grid.Column="0"
                      CornerRadius="5,0,0,5" 
                      Margin="1" 
                      Background="{StaticResource WindowBackgroundBrush}" 
                      BorderBrush="{StaticResource NormalBorderBrush}"
                      BorderThickness="0,0,1,0" />
                <Path 
                      x:Name="Arrow"
                      Grid.Column="1"     
                      Fill="{StaticResource GlyphBrush}"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#2d2d2d" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="SkyBlue" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledForegroundBrush}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="#2d2d2d"></Setter>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton 
            Name="ToggleButton" 
            Template="{StaticResource ComboBoxToggleButton}" 
            Grid.Column="2" 
            Focusable="false"
            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter
            Name="ContentSite"
            IsHitTestVisible="False" 
            Content="{TemplateBinding SelectionBoxItem}"
            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
            Margin="3,3,23,3"
                                
            VerticalAlignment="Center"
            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
            Style="{x:Null}" 
            Template="{StaticResource ComboBoxTextBox}" 
            HorizontalAlignment="Left" 
            VerticalAlignment="Center" 
            Margin="5,3,23,3"
            Focusable="True" 
                                     Foreground="White"
            Background="Transparent"
            Visibility="Hidden"
            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
            Name="Popup"
            Placement="Bottom"
            IsOpen="{TemplateBinding IsDropDownOpen}"
            AllowsTransparency="True" 
            Focusable="False"
            PopupAnimation="Slide">
                                <Grid 
              Name="DropDown"
              SnapsToDevicePixels="True"                
              MinWidth="{TemplateBinding ActualWidth}"
              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                x:Name="DropDownBorder"
                Background="{StaticResource WindowBackgroundBrush}"
                BorderThickness="1"
                BorderBrush="{StaticResource SolidBorderBrush}"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"
               Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!-- Style pour Header de ListView -->
        <!-- Ce style détruit les fonctionnalités de resizing et de déplacement des colonnes, il faudra reforger le tout si l'on veut utiliser ce style-->
        <!-- Pour l'instant ce style n'est pas utilisé -->

        <Style x:Key="GridViewColumnHeaderStyle1" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Border BorderThickness="1,1,0,1" BorderBrush="Gray" Background="Black">
                            <TextBlock x:Name="ContentHeader" VerticalAlignment="Center" Foreground="Gray" Text="{TemplateBinding Content}" Padding="5,5,5,5" Width="{TemplateBinding Width}" TextAlignment="Center"/>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ContentHeader" Property="Foreground" Value="White"/>
                                <Setter TargetName="ContentHeader" Property="Background" Value="Blue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        </Style>

        <!-- Style Bouton Vu -->
        <Style x:Key="BoutonVu" TargetType="Button">
            <Setter Property="Foreground" Value="LightGreen"/>
            <Setter Property="Background" Value="LightGreen"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="LightGreen"/>
            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                        Background="#FF232323"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="LightGreen"/>
                                <Setter TargetName="border" Property="Background" Value="#FF1E1E1E"/>
                                <Setter Property="Foreground" Value="LightGreen"></Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Gray"/>
                                <Setter TargetName="border" Property="Background" Value="#FF3E3E3E"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="LightGray"/>
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style Bouton Non vu-->
        <Style x:Key="BoutonNonVu" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                        Background="#FF232323"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="LightGreen"/>
                                <Setter TargetName="border" Property="Background" Value="#FF1E1E1E"/>
                                <Setter Property="Foreground" Value="LightGreen"></Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Gray"/>
                                <Setter TargetName="border" Property="Background" Value="#FF3E3E3E"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="LightGray"/>
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style pour Button de création -->
        <Style x:Key="BoutonCreation" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                Background="#FF232323"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="LightGreen"/>
                                <Setter TargetName="border" Property="Background" Value="#FF1E1E1E"/>
                                <Setter Property="Foreground" Value="LightGreen"></Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Gray"/>
                                <Setter TargetName="border" Property="Background" Value="#FF3E3E3E"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="LightGray"/>
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style pour bouton de suppression -->
        <Style x:Key="BoutonSuppression" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                Background="#FF232323"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Red"/>
                                <Setter TargetName="border" Property="Background" Value="#FF1E1E1E"/>
                                <Setter Property="Foreground" Value="Red"></Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Gray"/>
                                <Setter TargetName="border" Property="Background" Value="#FF3E3E3E"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="LightGray"/>
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Style de texbox -->
        <Style x:Key="CustomTextBoxStyle" TargetType="TextBox">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border"
                                Background="#484848"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="SkyBlue"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Gray"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#222222"/>
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#2d2d2d"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="IsEditable" Value="True"></Setter>
            <Setter Property="IsReadOnly" Value="False"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                                <DockPanel>
                                    <ToggleButton x:Name="ToggleButton"
                                          DockPanel.Dock="Right"
                                          Focusable="False"
                                          IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                          ClickMode="Press"
                                                  Margin="10,0,0,0" MinWidth="20">
                                        <ToggleButton.Template>
                                            <ControlTemplate>
                                                <Grid>
                                                    <Path x:Name="Arrow"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Data="M 0 0 L 4 4 L 8 0 Z"
                                                  Fill="White"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </ToggleButton.Template>
                                    </ToggleButton>
                                    <ContentPresenter Name="ContentSite"
                                              IsHitTestVisible="False"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="3,3,23,3"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"/>
                                </DockPanel>
                            </Border>
                            <Popup Name="Popup"
                           Placement="Bottom"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Slide">
                                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="200">
                                    <Border x:Name="DropDownBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="5"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
                                            KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="SkyBlue"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="LightGray"/>
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="False">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ResourceDictionary x:Key="Dark">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="DTSB.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>



    </Window.Resources>



    <Grid x:Name="Grid_Main" Background="#1a1a1a">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="7*"/>
            <ColumnDefinition Width="4*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition MinHeight="150"/>
        </Grid.RowDefinitions>




        <GridSplitter Width="10" Grid.RowSpan="2" BorderBrush="#FF2D2D2D" BorderThickness="1" Background="#2d2d2d">
            <GridSplitter.Effect>
                <DropShadowEffect BlurRadius="5" Opacity=".3"/>
            </GridSplitter.Effect>
        </GridSplitter>
        <!-- Tab Informations -->
        <TabControl x:Name="TabControl_Informations_PDF" Grid.Column="1" Grid.RowSpan="2" Margin="20,20,20,20">
            <TabItem x:Name="TabItem_Informations" MinWidth="100">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" Margin="10,10,10,10">
                        <Image Height="32" Width="32" MaxWidth="32" MaxHeight="32" MinWidth="32" MinHeight="32" Source="/Resources/logo_information.png" UseLayoutRounding="True" SnapsToDevicePixels="True"/>
                        <Label Content="Informations" Foreground="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="10,0,0,0"/>
                    </StackPanel>
                </TabItem.Header>
                <Grid x:Name="Grid_Info_Generale">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="120" MinHeight="120"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid x:Name="Grid_Info_Controles" Grid.Row="1" Margin="0,20,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="50" MaxHeight="50" Height="1*"/>
                            <RowDefinition MaxHeight="50" MinHeight="50" Height="1*"/>
                            <RowDefinition MaxHeight="50" MinHeight="50" Height="1*"/>
                            <RowDefinition MinHeight="50" MaxHeight="50" Height="1*"/>
                            <RowDefinition MinHeight="50" MaxHeight="50" Height="1*"/>
                            <RowDefinition MinHeight="50" MaxHeight="50" Height="1*"/>
                            <RowDefinition MinHeight="50" MaxHeight="50" Height="1*"/>
                            <RowDefinition MinHeight="50" MaxHeight="50" Height="1*"/>
                            <RowDefinition MinHeight="50" Height="2*"/>
                            <RowDefinition MinHeight="50" Height="1*"/>
                            <RowDefinition MinHeight="50" Height="1*"/>
                            <RowDefinition MinHeight="50" Height="1*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Border_Adresse" Style="{StaticResource MonStyleDeBorder}" Grid.Row="3">
                            <Label Foreground="White" Content="Adresse" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="20,0,38,0"/>
                        </Border>
                        <TextBox x:Name="adresse_info" Grid.Column="1" Style="{StaticResource CustomTextBoxStyle}" Margin="10" Background="#2d2d2d" Grid.Row="3" IsEnabled="False"/>
                        <Border x:Name="Border_Duree" Style="{StaticResource MonStyleDeBorder}" Grid.Row="6" Margin="10,10,10,10">
                            <Label Foreground="White" Content="Date de fin des Travaux" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="20,0,38,0"/>
                        </Border>
                        <DatePicker x:Name="DatePicker_Fin_Travaux" VerticalContentAlignment="Center" Margin="10" Grid.Row="6" Grid.Column="1">

                        </DatePicker>
                        <Border x:Name="Border_Des" Style="{StaticResource MonStyleDeBorder}" Grid.Row="8" Margin="10,10,10,10">
                            <Label Foreground="White" Content="Description" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="20,0,38,0"/>
                        </Border>
                        <TextBox x:Name="TextBox_Description_Info" Foreground="White" Grid.Column="1" AcceptsReturn="True" Grid.Row="8" Style="{StaticResource CustomTextBoxStyle}" Margin="10"></TextBox>
                        <Border x:Name="Border_Nom_Projet_Information" Style="{StaticResource MonStyleDeBorder}" Grid.Row="0" Margin="10,10,10,10">
                            <Label Foreground="White" Content="Projet" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="20,0,38,0"/>
                        </Border>
                        <TextBox x:Name="nom_projet_info" Grid.Column="1" Style="{StaticResource CustomTextBoxStyle}" Margin="10,10,10,10" Background="#2d2d2d" Grid.Row="0"/>
                        <Border x:Name="Border_Duree_Copy" Style="{StaticResource MonStyleDeBorder}" Grid.Row="7" Margin="10,10,10,10">
                            <Label Foreground="White" Content="Date de Transfert" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="20,0,38,0"/>
                        </Border>
                        <DatePicker x:Name="DatePicker_Date_Transfert" VerticalContentAlignment="Center" Margin="10,10,10,10" Grid.Row="7" Grid.Column="1">

                        </DatePicker>
                        <Border x:Name="Border_Nom_Projet_Information_Copy" Style="{StaticResource MonStyleDeBorder}" Grid.Row="1" Margin="10,10,10,10">
                            <Label Foreground="White" Content="Bâtiment" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="20,0,38,0"/>
                        </Border>
                        <TextBox x:Name="nom_batiment_info" Grid.Column="1" Style="{StaticResource CustomTextBoxStyle}" Margin="10,10,10,10" Background="#2d2d2d" Grid.Row="1" IsEnabled="False"/>
                        <Border x:Name="Border_Nom_Projet_Information_Copy1" Style="{StaticResource MonStyleDeBorder}" Grid.Row="2" Margin="10,10,10,10">
                            <Label Foreground="White" Content="Etage(s)" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="20,0,38,0"/>
                        </Border>
                        <TextBox x:Name="etages_projet_info" Grid.Column="1" Style="{StaticResource CustomTextBoxStyle}" Margin="10,10,10,10" Background="#2d2d2d" Grid.Row="2" IsEnabled="False"/>
                        <Border x:Name="Border_Duree_Copy1" Style="{StaticResource MonStyleDeBorder}" Grid.Row="4" Margin="10,10,10,10">
                            <Label Foreground="White" Content="Date de création du Projet" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="20,0,38,0"/>
                        </Border>
                        <TextBox x:Name="adresse_info_Copy" Grid.Column="1" Style="{StaticResource CustomTextBoxStyle}" Margin="10,10,10,10" Background="#2d2d2d" Grid.Row="4" IsEnabled="False"/>
                        <Border x:Name="Border_Duree_Copy2" Style="{StaticResource MonStyleDeBorder}" Grid.Row="5" Margin="10,10,10,10">
                            <Label Foreground="White" Content="Date de début des Travaux" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="20,0,38,0"/>
                        </Border>
                        <DatePicker x:Name="DatePicker_Fin_Travaux_Copy" VerticalContentAlignment="Center" Margin="10,10,10,10" Grid.Row="5" Grid.Column="1"/>



                    </Grid>
                    <m:Map x:Name="myMap" CredentialsProvider="AoUs24yue57NXCgupEBZ6MzAngQkatFB3ZdFf1tDWZoaZ_tgABVE_7iwo_Zm9_n-" BorderBrush="Black" BorderThickness="2" Mode="AerialWithLabels" Margin="10,10,10,10" MinHeight="100"/>
                    <GridSplitter BorderBrush="#FF2D2D2D" BorderThickness="1" Background="#2d2d2d" VerticalAlignment="Top" Grid.Row="1" HorizontalAlignment="Stretch" Height="10">
                        <GridSplitter.Effect>
                            <DropShadowEffect BlurRadius="5" Opacity=".3"/>
                        </GridSplitter.Effect>
                    </GridSplitter>
                </Grid>
            </TabItem>
            <TabItem x:Name="TabItem_PDF" MinWidth="50">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" Margin="10,10,10,10">
                        <Image Height="32" Width="32" MaxWidth="32" MaxHeight="32" MinWidth="32" MinHeight="32" Source="/Resources/logo_pdf.png" UseLayoutRounding="True" SnapsToDevicePixels="True"/>
                        <Label Content="PDF" Foreground="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="10,0,0,0"/>
                    </StackPanel>
                </TabItem.Header>
                <Grid Background="#1a1a1a">
                    <wv2:WebView2 x:Name="webView" Source="C:\sample.pdf" Margin="10,10,10,10"/>
                </Grid>
            </TabItem>
        </TabControl>
        <!-- Nouveau projet -->
        <TabControl x:Name="TabControl_NouveauProjet_Statistiques" Grid.Column="0" Margin="20,20,30,20" Grid.RowSpan="2">
            <TabItem x:Name="TabItem_Projets" MinWidth="120">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" Margin="10,10,10,10">
                        <Image Height="32" Width="32" MaxWidth="32" MaxHeight="32" MinWidth="32" MinHeight="32" Source="/Resources/logo_liste_projets.png" UseLayoutRounding="True" SnapsToDevicePixels="True"/>
                        <Label Content="Projets" Foreground="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="10,0,0,0"/>
                    </StackPanel>
                </TabItem.Header>

                <!-- DATAGRID ! -->
                <!-- DATAGRID ! -->
                <!-- DATAGRID ! -->

                <DataGrid x:Name="projectsDataGrid" EnableRowVirtualization="False" CanUserAddRows="False" BorderBrush="White" SelectionChanged="ProjectsDataGrid_SelectionChanged"  SelectionMode="Extended" Panel.ZIndex="10000" Background="#222222" AutoGenerateColumns="False" ItemsSource="{Binding Table}" MinRowHeight="60" Margin="10,10,10,10">


                    <DataGrid.Resources>
                        <ContextMenu
                            x:Key="RowMenu"
                            DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                            <MenuItem  Header="Marquer le(s) Projet(s) comme Vus" Click="ContextMenuItemVue_Click">
                                <MenuItem.Icon>
                                    <Image Source="Resources/logo_vu_contextmenu.png" ></Image>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Marquer le(s) Projet(s) comme Non-Vus" Click="ContextMenuItemVue_Click">
                                <MenuItem.Icon>
                                    <Image Source="Resources/logo_nonvu_contextmenu.png" ></Image>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Clôturer le(s) Projet(s)" Click="ContextMenuItem_CloseProjects"/>
                            <MenuItem Header="Supprimer le(s) Projet(s)" Click="ContextMenuItem_DeleteProjects"/>
                        </ContextMenu>
                    </DataGrid.Resources>

                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                            <Setter Property="ContextMenu" Value="{StaticResource RowMenu}" />
                        </Style>
                    </DataGrid.RowStyle>

                    <DataGrid.RowHeaderTemplate>
                        <DataTemplate>
                            <DockPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0" LastChildFill="True">
                                <Button MinWidth="50" Style="{StaticResource HeaderButtonStyle}" Margin="0,0,3,0" MinHeight="40" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Click="Vu_Button_Click">

                                </Button>
                            </DockPanel>
                        </DataTemplate>
                    </DataGrid.RowHeaderTemplate>

                    <DataGrid.Columns>

                        <DataGridTextColumn Binding="{Binding iD}" IsReadOnly="True" x:Name="iD" Width="Auto" CanUserReorder="False">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="TextAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.Header>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="5*"/>
                                        <ColumnDefinition Width="*" MinWidth="30" MaxWidth="30"/>
                                    </Grid.ColumnDefinitions>
                                    <Label Foreground="White" Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalContentAlignment="Center" Margin="0,0,0,0" HorizontalAlignment="Center" Content="iD" />

                                </Grid>
                            </DataGridTextColumn.Header>
                        </DataGridTextColumn>

                        <DataGridTextColumn Binding="{Binding project_name}" CanUserReorder="False" Width="Auto">
                            <DataGridTextColumn.Header>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="5*"/>
                                        <ColumnDefinition Width="*" MinWidth="30" MaxWidth="30"/>
                                    </Grid.ColumnDefinitions>
                                    <Label Foreground="White" Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalContentAlignment="Center" Margin="0,0,0,0" HorizontalAlignment="Left" Content="Nom du projet" />
                                    <TextBox x:Name="NameTextBox" Tag="project_name" Style="{StaticResource CustomTextBoxStyle}" Grid.Row="0" TextChanged="Filter_TextBox_TextChanged" Margin="0,10,10,10" Text="{Binding Filter, ElementName=mainwindow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Button Grid.Row="0" Content="X" Foreground="Red" Grid.Column="1" Style="{StaticResource BoutonSuppression}" Margin="0,10,5,10"/>

                                </Grid>
                            </DataGridTextColumn.Header>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding project_batiment}" x:Name="Bâtiment" CanUserReorder="False" Width="Auto">
                            <DataGridTextColumn.Header>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="5*"/>
                                        <ColumnDefinition Width="*" MinWidth="30" MaxWidth="30"/>
                                    </Grid.ColumnDefinitions>
                                    <Label Foreground="White" Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalContentAlignment="Center" Margin="0,0,0,0" HorizontalAlignment="Left" Content="Bâtiment" />
                                    <TextBox x:Name="BatimentTextBox" Tag="project_batiment" Style="{StaticResource CustomTextBoxStyle}"  Grid.Row="0" TextChanged="Filter_TextBox_TextChanged" Margin="0,10,10,10" Text="{Binding Filter, ElementName=mainwindow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Button Grid.Row="0" Content="X" Foreground="Red" Grid.Column="1" Style="{StaticResource BoutonSuppression}" Margin="0,10,5,10"/>

                                </Grid>
                            </DataGridTextColumn.Header>
                        </DataGridTextColumn>


                        <DataGridTextColumn Binding="{Binding project_city}" Width="Auto">
                            <DataGridTextColumn.Header>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="5*"/>
                                        <ColumnDefinition Width="*" MinWidth="30" MaxWidth="30"/>
                                    </Grid.ColumnDefinitions>
                                    <Label Foreground="White" Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalContentAlignment="Center" Margin="0,0,0,0" HorizontalAlignment="Left" Content="Ville" />
                                    <TextBox x:Name="VilleTextBox" Tag="project_city" Style="{StaticResource CustomTextBoxStyle}"  Grid.Row="0" TextChanged="Filter_TextBox_TextChanged" Margin="0,10,10,10" Text="{Binding Filter, ElementName=mainwindow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Button Grid.Row="0" Content="X" Foreground="Red" Grid.Column="1" Style="{StaticResource BoutonSuppression}" Margin="0,10,5,10"/>

                                </Grid>
                            </DataGridTextColumn.Header>
                        </DataGridTextColumn>
                        <DataGridTextColumn  Binding="{Binding project_floors}" Width="Auto">
                            <DataGridTextColumn.Header>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="5*"/>
                                        <ColumnDefinition Width="*" MinWidth="30" MaxWidth="30"/>
                                    </Grid.ColumnDefinitions>
                                    <Label Foreground="White" Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalContentAlignment="Center" Margin="0,0,0,0" HorizontalAlignment="Left" Content="Etages(s)" />
                                    <TextBox x:Name="EtageTextBox" Tag="project_floors" Style="{StaticResource CustomTextBoxStyle}"  Grid.Row="0" TextChanged="Filter_TextBox_TextChanged" Margin="0,10,10,10" Text="{Binding Filter, ElementName=mainwindow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Button Grid.Row="0" Content="X" Foreground="Red" Grid.Column="1" Style="{StaticResource BoutonSuppression}" Margin="0,10,5,10"/>

                                </Grid>
                            </DataGridTextColumn.Header>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding project_creation_date}" Width="Auto" Visibility="Hidden">
                            <DataGridTextColumn.Header>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="5*"/>
                                        <ColumnDefinition Width="*" MinWidth="30" MaxWidth="30"/>
                                    </Grid.ColumnDefinitions>
                                    <Label Foreground="White" Grid.Row="1" Grid.RowSpan="2" VerticalAlignment="Center" HorizontalContentAlignment="Center" Margin="0,0,0,0" HorizontalAlignment="Left" Content="Creation" />
                                    <TextBox x:Name="CreationDateTextBox" Tag="project_creation_date" Style="{StaticResource CustomTextBoxStyle}"  Grid.Row="0" TextChanged="Filter_TextBox_TextChanged" Margin="0,10,10,10" Text="{Binding Filter, ElementName=mainwindow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Button Grid.Row="0" Content="X" Foreground="Red" Grid.Column="1" Style="{StaticResource BoutonSuppression}" Margin="0,10,5,10"/>

                                </Grid>
                            </DataGridTextColumn.Header>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding project_creation_date}" Width="Auto">
                            <DataGridTextColumn.Header>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="5*"/>
                                        <ColumnDefinition Width="*" MinWidth="30" MaxWidth="30"/>
                                    </Grid.ColumnDefinitions>
                                    <Label Foreground="White" Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalContentAlignment="Center" Margin="0,0,0,0" HorizontalAlignment="Left" Content="Fin" />
                                    <TextBox x:Name="CreationDateFilterTextBox" Tag="project_creation_date" Style="{StaticResource CustomTextBoxStyle}" Grid.Row="0" TextChanged="Filter_TextBox_TextChanged" Margin="0,10,10,10" Text="{Binding Filter, ElementName=mainwindow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Button Grid.Row="0" Content="X" Foreground="Red" Grid.Column="1" Style="{StaticResource BoutonSuppression}" Margin="0,10,5,10"/>

                                </Grid>
                            </DataGridTextColumn.Header>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding project_specialist}" Width="Auto">
                            <DataGridTextColumn.Header>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="5*"/>
                                        <ColumnDefinition Width="*" MinWidth="30" MaxWidth="30"/>
                                    </Grid.ColumnDefinitions>
                                    <Label Foreground="White" Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalContentAlignment="Center" Margin="0,0,0,0" HorizontalAlignment="Left" Content="Responsable" />
                                    <TextBox x:Name="SpecialistFilterTextBox" Tag="project_specialist" Style="{StaticResource CustomTextBoxStyle}" Grid.Row="0" TextChanged="Filter_TextBox_TextChanged" Margin="0,10,10,10" Text="{Binding Filter, ElementName=mainwindow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Button Grid.Row="0" Content="X" Foreground="Red" Grid.Column="1" Style="{StaticResource BoutonSuppression}" Margin="0,10,5,10"/>

                                </Grid>
                            </DataGridTextColumn.Header>
                        </DataGridTextColumn>

                        <DataGridTextColumn Binding="{Binding project_typologies}" Width="*" MinWidth="90">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox">
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                    <Setter Property="AcceptsReturn" Value="true" />
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                            <DataGridTextColumn.Header>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="5*"/>
                                        <ColumnDefinition Width="*" MinWidth="30" MaxWidth="30"/>
                                    </Grid.ColumnDefinitions>
                                    <Label Foreground="White" Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalContentAlignment="Center" Margin="0,0,0,0" HorizontalAlignment="Left" Content="Typologie" />
                                    <TextBox x:Name="TypologieFilterTextBox" Tag="project_specialist" Style="{StaticResource CustomTextBoxStyle}" Grid.Row="0" TextChanged="Filter_TextBox_TextChanged" Margin="0,10,10,10" Text="{Binding Filter, ElementName=mainwindow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Button Grid.Row="0" Content="X" Foreground="Red" Grid.Column="1" Style="{StaticResource BoutonSuppression}" Margin="0,10,5,10"/>

                                </Grid>
                            </DataGridTextColumn.Header>
                        </DataGridTextColumn>


                    </DataGrid.Columns>





                </DataGrid>
            </TabItem>
            <TabItem x:Name="TabItem_NewProject" MinWidth="120">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" Width="Auto" Margin="10,10,10,10">
                        <Image Height="32" Width="32" MaxWidth="32" MaxHeight="32" MinWidth="32" MinHeight="32" Source="/Resources/logo_nouveau_projet.png" UseLayoutRounding="True" SnapsToDevicePixels="True"/>
                        <Label Content="Nouveau Projet" Foreground="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="10,0,0,0"/>
                    </StackPanel>
                </TabItem.Header>
                <DockPanel>
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <!-- Grille de la création de projets -->
                        <Grid x:Name="Grid_Input">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <!-- Definition des rangées de la grille des controles de creation d'un nouveau projet -->
                                <RowDefinition MinHeight="50"/>
                                <RowDefinition/>
                                <RowDefinition MinHeight="50"/>
                                <RowDefinition MinHeight="50"/>
                                <RowDefinition MinHeight="120"/>
                                <RowDefinition MinHeight="50"/>
                                <RowDefinition MinHeight="80"/>
                                <RowDefinition MinHeight="50"/>
                            </Grid.RowDefinitions>
                            <TextBox x:Name="project_name_txtbox" TabIndex="0" Style="{StaticResource CustomTextBoxStyle}" Grid.Column="2" BorderBrush="Black" Margin="10,10,10,10" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" Background="#FF2D2D2D"/>
                            <TextBox x:Name="project_city_txtbox" Style="{StaticResource CustomTextBoxStyle}" Grid.Row="2" Grid.Column="2" Grid.RowSpan="1" Margin="10,10,10,10" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" Background="#FF2D2D2D" IsEnabled="False"/>
                            <TextBox x:Name="responsable_txtbox" Style="{StaticResource CustomTextBoxStyle}" TabIndex="3" Grid.Row="4" Grid.Column="2" Margin="10,10,10,10" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" Background="#FF2D2D2D"/>
                            <Button x:Name="submit_btn" Style="{StaticResource BoutonCreation}" Content="Créer le Projet" Click="submit_btn_Click" Grid.Row="7"  Grid.Column="2" Margin="10"/>
                            <Button x:Name="truncate_btn" Style="{StaticResource BoutonSuppression}" Content="Effacer tout" Click="truncate_btn_Click" Grid.Row="7" Grid.Column="0" Margin="10" Grid.ColumnSpan="2"/>
                            <Border x:Name="Border_Nom_Projet" Style="{StaticResource MonStyleDeBorder}" Grid.Column="1" ToolTip="Le nom du nouveau projet.&#xA;Cette information ne pourra pas être modifiée au cours de la vie du projet.&#xA;Cette information est indispensable à la création d'un nouveau projet.&#xA;Le nom du projet ne peut être laissé vide.">

                                <Label x:Name="Label_ProjectName1" Content="Nom du projet" VerticalContentAlignment="Center" Margin="10,0,10,0" Foreground="White"/>
                            </Border>
                            <Border x:Name="Border_Ville" Style="{StaticResource MonStyleDeBorder}" Grid.Row="2" Grid.Column="1" ToolTip="La ville du bâtiment sélectionné.&#xA;Cette information est récupérée automatiquement par la sélection d'un bâtiment, avec d'autres informations de localisation (code postal, adresse, etc.).&#xA;Cette information est indispensable à la création d'un nouveau projet.&#xA;Ce controle n'est pas éditable par l'utilisateur.">

                                <Label x:Name="Label_Age" Content="Ville" VerticalContentAlignment="Center" Margin="10,0,10,0" Foreground="White"/>
                            </Border>
                            <Border x:Name="Border_Batiment" Style="{StaticResource MonStyleDeBorder}" Grid.Row="1" Grid.Column="1" ToolTip="Le batiment concerné par le projet.&#xA;Cette information ne pourra pas être modifiée au cours de la vie du projet.&#xA;Cette information est indispensable à la création d'un nouveau projet.&#xA;Le bâtiment ne peut être laissé vide.">

                                <Label x:Name="Label_Amount" Content="Bâtiment" VerticalContentAlignment="Center" Margin="10,0,10,0" Foreground="White" />
                            </Border>
                            <Border x:Name="Border_Etages" Style="{StaticResource MonStyleDeBorder}" Grid.Row="3"  Grid.Column="1" ToolTip="Les étages du bâtiment concernés par le projet.&#xA;Cette information pourra être modifiée au cours de la vie du projet.&#xA;Plusieurs étages peuvent être sélectionnés.">

                                <Label Content="Etage(s)" VerticalContentAlignment="Center" Foreground="White" Margin="10,0,10,0"/>
                            </Border>
                            <ComboBox x:Name="project_batiment_combobox" TabIndex="1" Grid.Row="1" Grid.Column="2" Margin="10,10,10,10" IsEditable="True" Background="#2d2d2d"/>
                            <ListBox x:Name="project_etages_listbox" TabIndex="2" ScrollViewer.VerticalScrollBarVisibility="Auto" Foreground="White" d:ItemsSource="{d:SampleData ItemCount=5}" Margin="10" Grid.Row="3" BorderBrush="Black" SelectionMode="Extended" Background="#222222" Grid.Column="2" SnapsToDevicePixels="True" UseLayoutRounding="True" ScrollViewer.CanContentScroll="True" IsEnabled="True">
                                <ListBox.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="5"/>
                                        <Setter Property="Background" Value="#2d2d2d"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Background" Value="#2d2d2d"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.Resources>
                            </ListBox>
                            <Border x:Name="Border_Responsable" Style="{StaticResource MonStyleDeBorder}" Grid.Row="4" Grid.Column="1" ToolTip="La personne en charge du projet.&#xA;Cette information pourra être modifiée au cours de la vie du projet.&#xA;Cette information est indispensable à la création d'un nouveau projet.&#xA;Le responsable ne peut être laissé vide.">

                                <Label x:Name="Responsable" Content="Responsable" VerticalContentAlignment="Center" Margin="10,0,10,0" Foreground="White"/>
                            </Border>
                            <Image x:Name="logo_batiment" Grid.RowSpan="1" Source="/Resources/logo_ville_V2.png" Margin="20,0,20,0" MaxWidth="32" MaxHeight="32" MinWidth="32" MinHeight="32" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" UseLayoutRounding="True" SnapsToDevicePixels="True" Opacity="0.75"/>
                            <Image x:Name="logo_ville" Source="/Resources/logo_ville.png" MaxWidth="32" MaxHeight="32" MinWidth="32" MinHeight="32" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="2" UseLayoutRounding="True" SnapsToDevicePixels="True" Opacity="0.75"/>
                            <Image x:Name="logo_etage" Source="/Resources/logo_etages.png" MaxWidth="32" MaxHeight="32" MinWidth="32" MinHeight="32" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="3" UseLayoutRounding="True" SnapsToDevicePixels="True" Opacity="0.75"/>
                            <Image x:Name="logo_responsable" Source="/Resources/logo_responsable.png" MaxWidth="32" MaxHeight="32" MinWidth="32" MinHeight="32" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="4" UseLayoutRounding="True" SnapsToDevicePixels="True" Opacity="0.75"/>
                            <Image x:Name="logo_nom_projet" Source="/Resources/logo_nom_projet.png" MaxWidth="32" MaxHeight="32" MinWidth="32" MinHeight="32" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="0" UseLayoutRounding="True" SnapsToDevicePixels="True" Opacity="0.75"/>
                            <Border x:Name="Border_Description" Style="{StaticResource MonStyleDeBorder}" Grid.Row="5" Grid.Column="1" ToolTip="Une description du projet, plusieurs lignes peuvent être utilisées.&#xA;Les lignes débutant par un trait d'union seront traitées en tâches.&#xA;Cette information pourra être modifiée au cours de la vie du projet.&#xA;Cette information est optionelle à la création d'un projet." Margin="10,10,10,10">

                                <Label x:Name="Description_Projet" Content="Description" VerticalContentAlignment="Center" Margin="10,0,10,0" Foreground="White"/>
                            </Border>
                            <Image x:Name="logo_description_projet" Source="/Resources/logo_description_projet.png" MaxWidth="32" MaxHeight="32" MinWidth="32" MinHeight="32" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="5" UseLayoutRounding="True" SnapsToDevicePixels="True" Opacity="0.75"/>
                            <TextBox x:Name="description_txtbox" Style="{StaticResource CustomTextBoxStyle}" TabIndex="4" TextWrapping="Wrap" AcceptsReturn="True" Grid.Row="5" Grid.Column="2" Margin="10,10,10,10" VerticalContentAlignment="Top" HorizontalContentAlignment="Left" Background="#FF2D2D2D"/>
                            <Grid x:Name="Grid_Typologies" Grid.ColumnSpan="1" Grid.RowSpan="1" Grid.Row="6" Grid.Column="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Border x:Name="Border_Typologie_Transfert" Style="{StaticResource MonStyleDeBorder2}" ToolTip="Une description du projet, plusieurs lignes peuvent être utilisées.&#xA;Les lignes débutant par un trait d'union seront traitées en tâches.&#xA;Cette information pourra être modifiée au cours de la vie du projet.&#xA;Cette information est optionelle à la création d'un projet.">

                                    <Label x:Name="Label_Transfert" Content="TRANSFERT" VerticalContentAlignment="Center" Margin="10,0,10,0" Foreground="White" HorizontalContentAlignment="Center"/>
                                </Border>
                                <Border x:Name="Border_Typologie_Travaux" Style="{StaticResource MonStyleDeBorder2}" ToolTip="Une description du projet, plusieurs lignes peuvent être utilisées.&#xA;Les lignes débutant par un trait d'union seront traitées en tâches.&#xA;Cette information pourra être modifiée au cours de la vie du projet.&#xA;Cette information est optionelle à la création d'un projet." Margin="10,10,10,10" Grid.Column="1">

                                    <Label x:Name="Label_Travaux" Content="TRAVAUX" VerticalContentAlignment="Center" Margin="10,0,10,0" Foreground="White" HorizontalContentAlignment="Center"/>
                                </Border>
                                <Border x:Name="Border_Typologie_Mobilier" Style="{StaticResource MonStyleDeBorder2}" ToolTip="Une description du projet, plusieurs lignes peuvent être utilisées.&#xA;Les lignes débutant par un trait d'union seront traitées en tâches.&#xA;Cette information pourra être modifiée au cours de la vie du projet.&#xA;Cette information est optionelle à la création d'un projet." Margin="10,10,10,10" Grid.Column="2">

                                    <Label x:Name="Label_Mobilier" Content="MOBILIER" VerticalContentAlignment="Center" Margin="10,0,10,0" Foreground="White" HorizontalContentAlignment="Center"/>
                                </Border>
                            </Grid>
                            <Border x:Name="Border_Typologie" Style="{StaticResource MonStyleDeBorder}" Grid.Row="6" Grid.Column="1" ToolTip="Une description du projet, plusieurs lignes peuvent être utilisées.&#xA;Les lignes débutant par un trait d'union seront traitées en tâches.&#xA;Cette information pourra être modifiée au cours de la vie du projet.&#xA;Cette information est optionelle à la création d'un projet." Margin="10,10,10,10">

                                <Label x:Name="Description_Projet1" Content="Typologie" VerticalContentAlignment="Center" Margin="10,0,10,0" Foreground="White"/>
                            </Border>
                            <Image x:Name="logo_description_projet_Copy" Source="/Resources/logo_typologies.png" MaxWidth="32" MaxHeight="32" MinWidth="32" MinHeight="32" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="6" UseLayoutRounding="True" SnapsToDevicePixels="True" Opacity="0.75"/>
                        </Grid>
                    </ScrollViewer>
                </DockPanel>
            </TabItem>
            
            <!-- TAB STATISTIQUES -->
            <!-- TAB STATISTIQUES -->
            <!-- TAB STATISTIQUES -->
            
            <TabItem x:Name="TabItem_Stats" MinWidth="120">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" Margin="10,10,10,10">
                        <Image Height="32" Width="32" MaxWidth="32" MaxHeight="32" MinWidth="32" MinHeight="32" Source="/Resources/logo_statistiques_projets.png" UseLayoutRounding="True" SnapsToDevicePixels="True"/>
                        <Label Content="Statistiques" Foreground="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="10,0,0,0"/>
                    </StackPanel>
                </TabItem.Header>
                <Grid Margin="10,10,10,10">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <ScottPlot:WpfPlot x:Name="WPF_Plot_Projets_Villes"/>
                    <ScottPlot:WpfPlot x:Name="WPF_Plot_Projets_Batiments" Grid.Row="0" Grid.Column="1"/>
                </Grid>
            </TabItem>
        </TabControl>

        <!-- Fin de la grille principale -->

    </Grid>
</Window>
